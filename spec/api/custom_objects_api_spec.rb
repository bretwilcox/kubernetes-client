=begin
#Kubernetes

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1.8.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for Kubernetes::CustomObjectsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomObjectsApi' do
  before do
    # run before each test
    @instance = Kubernetes::CustomObjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomObjectsApi' do
    it 'should create an instance of CustomObjectsApi' do
      expect(@instance).to be_instance_of(Kubernetes::CustomObjectsApi)
    end
  end

  # unit tests for create_cluster_custom_object
  # 
  # Creates a cluster scoped Custom object
  # @param group The custom resource&#39;s group name
  # @param version The custom resource&#39;s version
  # @param plural The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param body The JSON schema of the Resource to create.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pretty If &#39;true&#39;, then the output is pretty printed.
  # @return [Object]
  describe 'create_cluster_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_namespaced_custom_object
  # 
  # Creates a namespace scoped Custom object
  # @param group The custom resource&#39;s group name
  # @param version The custom resource&#39;s version
  # @param namespace The custom resource&#39;s namespace
  # @param plural The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param body The JSON schema of the Resource to create.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pretty If &#39;true&#39;, then the output is pretty printed.
  # @return [Object]
  describe 'create_namespaced_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cluster_custom_object
  # 
  # Deletes the specified cluster scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param plural the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :grace_period_seconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
  # @option opts [BOOLEAN] :orphan_dependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
  # @option opts [String] :propagation_policy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
  # @return [Object]
  describe 'delete_cluster_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_namespaced_custom_object
  # 
  # Deletes the specified namespace scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param namespace The custom resource&#39;s namespace
  # @param plural the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :grace_period_seconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
  # @option opts [BOOLEAN] :orphan_dependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
  # @option opts [String] :propagation_policy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
  # @return [Object]
  describe 'delete_namespaced_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cluster_custom_object
  # 
  # Returns a cluster scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param plural the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_cluster_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_namespaced_custom_object
  # 
  # Returns a namespace scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param namespace The custom resource&#39;s namespace
  # @param plural the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_namespaced_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_cluster_custom_object
  # 
  # list or watch cluster scoped custom objects
  # @param group The custom resource&#39;s group name
  # @param version The custom resource&#39;s version
  # @param plural The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pretty If &#39;true&#39;, then the output is pretty printed.
  # @option opts [String] :label_selector A selector to restrict the list of returned objects by their labels. Defaults to everything.
  # @option opts [String] :resource_version When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
  # @option opts [BOOLEAN] :watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.
  # @return [Object]
  describe 'list_cluster_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_namespaced_custom_object
  # 
  # list or watch namespace scoped custom objects
  # @param group The custom resource&#39;s group name
  # @param version The custom resource&#39;s version
  # @param namespace The custom resource&#39;s namespace
  # @param plural The custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pretty If &#39;true&#39;, then the output is pretty printed.
  # @option opts [String] :label_selector A selector to restrict the list of returned objects by their labels. Defaults to everything.
  # @option opts [String] :resource_version When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
  # @option opts [BOOLEAN] :watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.
  # @return [Object]
  describe 'list_namespaced_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_cluster_custom_object
  # 
  # replace the specified cluster scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param plural the custom object&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param body The JSON schema of the Resource to replace.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'replace_cluster_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_namespaced_custom_object
  # 
  # replace the specified namespace scoped custom object
  # @param group the custom resource&#39;s group
  # @param version the custom resource&#39;s version
  # @param namespace The custom resource&#39;s namespace
  # @param plural the custom resource&#39;s plural name. For TPRs this would be lowercase plural kind.
  # @param name the custom object&#39;s name
  # @param body The JSON schema of the Resource to replace.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'replace_namespaced_custom_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
